---
title: Meteor Vocabulary
slug: meteor-vocabulary
date: 0014/01/02
number: 14.5
sidebar: true
contents: Review a few common Meteor terms. 
paragraphs: 24
---

////

#### クライアント

クライアントの話をする時、FirefoxやSafariなどのトラディショナルブラウザーであろうと、
もしくはネイティブのiPhoneアプリケーションであるUIWebViewのような複雑なものであろうとも、ユーザーの
"Webブラウザー"で上で実行されているコードの事を指します。

#### コレクション

Meteorコレクションとは、自動的にクライアントとサーバー間で同期するデータストアです。コレクションには（`ポス
ト`のような）名前があり、そして通常クライアントとサーバー上両方に存在しています。それらはお互い、別の動作を
しますが、それらはMongo（モンゴ）のAPIを基本とした共通のAPIを持ちます。

#### コンピュテーション(計算）

コンピュテーション(計算）とは、変更によって一部のデータソースが反応すると毎回実行されるコードの塊です。もし
あなたが、（例えばセッション変数などの）反応性データーソースを持っていて、それに反応的レスポンスをしてほしい
のであれば、それのための計算を設定する必要があります。

#### カーソル

カーソルとは、Mongoコレクション上で照会（クエリ）が実行された結果です。クライアント側では、カーソルは結果だ
けの配列に過ぎません。しかしながら、追加されたり、削除されたり、更新されたりとコレクションに関連がある複数の
オブジェクトとして監視される”反応”側のオブジェクトです。
 
#### DDP

DDPとは、Meteorの分散データプロトコルで、ワイヤープロトコルは複数のコレクションを同期するために、そして、
メソッドを呼び出すのに使われます。DDPとは、重いデータを持つ複数のアプリケーションをリアルタイムで、HTTPの代
わりをする凡用プロトコルとして意図されています。


#### Deps

Depsとは、Meteorの反応性システムです。Depsは、HTML自動で基礎となるデーターモデルと同期し続けられるよう、
背後で使われています。


#### ドキュメント

Mongoは、ドキュメントベースのデーターストアであるため、コレクションから出てくる複数のオブジェクトは「ドキ
ュメント」とよばれています。これらは、MeteorがDDPを介してそれらの特性を追跡するために使っている、共通の特
殊プロパティ「_id」、のような簡単なJavaScriptのオブジェクト（複数の関数は持てませんが）です。

#### ヘルパー

テンプレートがドキュメントプロパティよりもっと複雑なものをレンダリング（生成）する必要がある場合には、レンダ
リングを支援する為に使用される関数を呼び出す事が出来ます。

#### Latency Compensation　（レイテンシーの埋め合わせ）

サーバーからリスポンスが帰ってくるまで時間のズレを避けるため、クライアント上のメソッドコールのシュミレ
ーションを可能にする技術です。


#### Meteor Development Group (MDG)

フレームワーク自身へ反対し、Meteorを開発している実在の会社です。

#### メソッド

Meteorメソッドは、レイテンシー補正をコレクションが変更し追跡し、許可するいくつかの特別なロジックを持つ、
クライアントからサーバーへのリモートプロシージャーコールです。

#### MiniMongo

クライアント側のコレクションは、Mongoの様なAPIを提供するインメモリデータストアです。この動作をサポートし
ているライブラリーは、それがメモリ内で完全に実行されるMongoの小型版と位置づけられるため、「MiniMongo」と
よばれています。


#### パッケージ

Meteorパッケージは、サーバー上で実行するJavaScriptコードで成り立っています。クライアント上で実行している
JavaScriptコード、リソース(CSSへSASSのような)をどう手続きするのかを指示し、リソースが処理されます。
<br />パッケージはスーパーパワーライブラリーのようなものです。Meteorはコアパッケージの拡張セットが付属して
おり、コミュニティのコレクションは、サードパーティーのパッケージを供給している
[Atmosphere](http://atmosphere.meteor.com)もあります。


#### パブリケーション

パブリケーションとは、それに加入している各ユーザー向けにカスタマイズされたデーターの名前付きセットです。



#### Server

Meteorサーバーは、Node.jsを介して実行されるHTTPとDDPサーバーです。Meteorライブラリーとサーバーサイドの
JavaScriptコードで構成されています。Meteorサーバーを起動する際、（開発に中それ自身で起動する）Mongoデー
タベースに接続します。


#### Session

Meteorでのセッションは、ユーザーが実行状態であることを記録するためのアプリケーションによって、クライアント
側の反応性データベースを参照します。

#### サブスクリプション

サブスクリプションは特定のクライアント用のパブリケーションへの接続です。サブスクリプションは、データを同期の
状態にし続ける、サーバー上のパブリケーションと話す、ブラウザー上で実行するコードです。

#### テンプレート

テンプレートとはJavaScriptでHTMLを生成するメソッドです。デフォルトで、Meteorは、ロジックが少ないテンプレー
トシステムであるスペースバーをサポートします。将来的にはより多くの物をサポートする計画もあります。

#### テンプレートデータコンテキスト

テンプレートがレンダリングすると、JavaScriptのオブジェクトを参照します。それらはより複雑になる可能性があり
、また、それらの上に利用できる機能を持っています。通常そのような複数のオブジェクトはPOJO(昔からある単なる
JavaScriptオブジェクト)であり、しばしばコレクションからのドキュメントであったりします。

